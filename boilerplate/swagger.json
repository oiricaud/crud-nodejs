{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My Employee Project CRUD",
    "description": "My Employee Project Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Employees",
      "description": "API for employees in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/employees": {
      "post": {
        "tags": [
          "Employees"
        ],
        "description": "Create new employee in system",
        "parameters": [
          {
            "name": "employee",
            "in": "body",
            "description": "Employee that we want to create",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New employee is created",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get all employees in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Employees"
            }
          }
        }
      }
    },
    "/employees/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of employee that we want to find",
          "type": "integer"
        }
      ],
      "delete": {
        "summary": "Delete employee with given ID",
        "tags": [
          "Employees"
        ],
        "responses": {
          "200": {
            "description": "Employee is deleted",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      },
      "get": {
        "summary": "Get employee with given ID",
        "tags": [
          "Employees"
        ],
        "responses": {
          "200": {
            "description": "Employee is retrieved by ID",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      },
      "put": {
        "summary": "Update employee with give ID",
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "employee",
            "in": "body",
            "description": "Employee with new values of properties",
            "schema": {
              "$ref": "#/definitions/updateEmployee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee is updated",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Employee": {
      "required": [
        "id",
        "firstName",
        "lastName",
        "hireDate",
        "role"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "uniqueItems": true
        },
        "firstName": {
          "type": "string",
          "example": "Bob"
        },
        "lastName": {
          "type": "string",
          "example": "Burgers"
        },
        "hireDate": {
          "type": "string",
          "example": "01/01/2020"
        },
        "role": {
          "type": "string",
          "example": "CEO"
        }
      }
    },
    "updateEmployee": {
      "properties": {
        "id": {
          "type": "integer",
          "uniqueItems": true,
          "example": "1"
        },
        "firstName": {
          "type": "string",
          "example": "Bob"
        },
        "lastName": {
          "type": "string",
          "example": "Burgers"
        },
        "hireDate": {
          "type": "string",
          "example": "01/01/2020"
        },
        "role": {
          "type": "string",
          "example": "CEO"
        }
      }
    },
    "Employees": {
      "type": "array",
      "$ref": "#/definitions/Employee"
    }
  }
}

